<?xml version="1.0" standalone="yes" ?>
<main>
	<serviceUrl>https://dev104171.myservers.com/api/now</serviceUrl>
	<userName>connect</userName>
	<password>nei88VAdEMmIgNB9XDJTh7AnPZh1WVOmcTNTPfYXuWkFtm9qvhitaczzSUtPwVBJIU38bOXoqnqrPcPC+TlFLw==</password>
	<authenticationMode>BASIC</authenticationMode>
	<clientId>__TOOL_CLIENTID__</clientId>
	<secret>__TOOL_SECRET__</secret>
	<oauthUri>__TOOL_OAUTH_URI__</oauthUri>
	<dateFormatServer>yyyy-MM-dd HH:mm:ssXXX</dateFormatServer>
	<timezoneServer>UTC</timezoneServer>
	<attachments>
		<getUrl>__TOOL_ATTACHMENT_URL__</getUrl>
                <getContent>__TOOL_ATTACHMENT_CONTENT__</getContent>
                <urlPrefix>__TOOL_ATTACHPREFIX__</urlPrefix>
	</attachments>
	
	<asyncProcessingThreads>5</asyncProcessingThreads>
	<!-- Timezone of the plugin server --> 
	<timezonePluginServer>UTC</timezonePluginServer>
	<maxRetries>5</maxRetries>
	<retryInterval>5</retryInterval>
	<!-- Extended retry settings provided for extended
		retry capability (i.e. dealing with server unavailability)
	-->
	<retryIntervalExtended>300</retryIntervalExtended>
	<!-- If there is time variance between cherwell and plugin server
	     the timeOffset can be used to rectify poller query timing.
		 Specified in seconds.	-->
	<timeOffset>0</timeOffset>
	<!-- Chunk Size determines how many results are returned
		 in a result set. Value should be greater than 0
		 and less than server max result set size (typically
		 10,000
	-->
	<chunkSize>50</chunkSize>
	<!-- Chunk Wait provides a waiting period between
		 retrieval one chunk of records and the next.
	-->
	<chunkWait>0</chunkWait>
	
	<transformation>
		<maps>
			<map name="Incident">
				<path>pathtomapfile.map</path>
				<subMaps>
					<subMap name="COMMENTS">
						<path>pathtomapfile.map</path>
						<inline>true</inline>
						<inlineField>comments</inlineField>
					</subMap>
					<subMap name="SUBTASK">
						<path>pathtomapfile.map</path>
						<inline>false</inline>
						<inlineField></inlineField>
						<subMaps>
							<subMap name="COMMENTS">
								<path>pathtomapfile.map</path>
								<inline>true</inline>
								<inlineField>comments</inlineField>
							</subMap>
						</subMaps>
					</subMap>
				</subMaps>
			</map>
			<map name="Change">
				<path>pathtomapfile.map</path>
				<subMaps>
					<subMap name="COMMENTS">
						<path>pathtomapfile.map</path>
						<inline>true</inline>
						<inlineField>comments</inlineField>
					</subMap>
					<subMap name="SUBTASK">
						<path>pathtomapfile.map</path>
						<inline>false</inline>
						<inlineField></inlineField>
						<subMaps>
							<subMap name="COMMENTS">
								<path>pathtomapfile.map</path>
								<inline>true</inline>
								<inlineField>comments</inlineField>
							</subMap>
						</subMaps>
					</subMap>
				</subMaps>
			</map>
		</maps>
	</transformation>
	<modules>
		<module name="Incident">
			<consumer>
				<!-- uri of table where data is read -->
				<uri>table/incident</uri>
				<pollingInterval>30</pollingInterval>
				<!-- polling mechanism always includes sys_updated_on in
				     query (using incident.dat) but additional query options
					 may be specified if needed to further restrict results
				-->
				<query>a valid query</query>
			</consumer>
			<producer>
				<!-- the uri to write -->
				<uri>import/sometable</uri>
				<!-- number of threads used to write to SNOW -->
				<threads>3</threads>
				<!-- amount of time (seconds) before a thread checks
					to see if there is work to be processed
				-->
				<pollingInterval>5</pollingInterval>
			</producer>
			<subModule name="IncidentTask">
				<uri>table/sometable</uri>
				<query>__TOOL_INC_QUERY__</query>
				<producer>
					<uri>import/sometable</uri>
				</producer>
			</subModule>
		</module>
	</modules>
</main>
